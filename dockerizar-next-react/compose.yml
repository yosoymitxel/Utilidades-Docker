name: esm
services:
  web:
    image: ${DOCKER_IMAGE_NAME}
    container_name: ${PROJECT_NAME}-web
    build:
      context: .
      args:
        - DB_NAME=${DB_NAME}
        - DB_HOST=${DB_HOST}
        - DB_PASS=${DB_PASS}
        - DB_USER=${DB_USER}
        - SMTP_HOST=${SMTP_HOST}
        - SMTP_USER=${SMTP_USER}
        - SMTP_PASS=${SMTP_PASS}
        - SMTP_PORT=${SMTP_PORT}
    restart: always
    ports:
      - ${WEB_PORT}:3000
    environment:
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PASS=${DB_PASS}
      - DB_USER=${DB_USER}
      - WATCHPACK_POLLING = true
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_PORT=${SMTP_PORT}
    develop:
      watch:
        - action: sync
          path: ./
          target: /bajotapas
          ignore:
            - node_modules/
        - action: sync
          path: ./next
          target: /bajotapas/.next
        - action: rebuild
          path: package.json
    depends_on:
      database:
        condition: service_healthy
  database:
    image: mariadb:11.1.2
    container_name: ${PROJECT_NAME}-datos
    restart: always
    volumes:
      - mysqldata:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_PASS}
      - MARIADB_DATABASE=${DB_NAME}
    ports:
      - ${DB_PORT}:3306
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--connect"]
      interval: 10s
      timeout: 5s
      retries: 3
volumes:
  mysqldata:
networks:
  default:
    name: ${PROJECT_NAME}-net
